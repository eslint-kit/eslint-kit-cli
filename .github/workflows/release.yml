name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Setup git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"

      - name: Checkout to tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - name: Parse version from tag
        id: version
        uses: release-kit/semver@v2

      - name: Get release branch name
        id: release-branch
        run: echo "::set-output name=name::${{ steps.version.outputs.prerelease != null && 'release/${{ steps.version.outputs.prerelease }}' || 'release/latest' }}"

      - name: Checkout/create release branch
        run: git checkout ${{ steps.release-branch.outputs.name }} || git checkout -b ${{ steps.release-branch.outputs.name }}

      - name: Check if branch exists on remote
        id: release-branch-exists
        run: echo "::set-output name=exists::$(git ls-remote --heads ${{ github.server_url }}/${{ github.repository }} ${{ steps.release-branch.outputs.name }} | wc -l)"

      - name: Create release branch if it's not exist
        if: ${{ steps.release-branch-exists.outputs.exists == '0' }}
        run: git push -u origin ${{ steps.release-branch.outputs.name }}

      - name: Sync release branch with released tag
        run: git reset --hard ${{ github.event.release.tag_name }}

      - name: Push release branch to remote
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.FULL_ACCESS_GITHUB_TOKEN }}
          branch: ${{ steps.release-branch.outputs.name }}
          tags: true
          force: true
          unprotect_reviews: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create a new build
        run: |
          yarn install --frozen-lockfile
          yarn test
          yarn build

      - name: Set version from release
        uses: reedyuk/npm-version@1.0.1
        with:
          version: ${{ steps.version.outputs.full }}

      - name: Create NPM config
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish latest
        if: ${{ steps.version.outputs.prerelease == '' }}
        run: npm publish

      - name: Publish RC
        if: ${{ steps.version.outputs.prerelease != '' }}
        run: npm publish --tag ${{ steps.version.outputs.prerelease }}